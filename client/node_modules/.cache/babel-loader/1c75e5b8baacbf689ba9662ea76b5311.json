{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\src\\\\components\\\\common\\\\InputGroup.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nvar InputGroup = function InputGroup(_ref) {\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      error = _ref.error,\n      onChange = _ref.onChange,\n      icon = _ref.icon,\n      info = _ref.info;\n  return React.createElement(\"div\", {\n    className: \"input-field col s6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons prefix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, icon), React.createElement(\"input\", {\n    id: \"icon_prefix\",\n    type: \"text\",\n    onChange: onChange,\n    className: classnames(\"validate\", {\n      notvalid: error\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"icon_prefix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, placeholder), error && React.createElement(\"span\", {\n    className: \"helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, error));\n};\n\nInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  icon: PropTypes.string\n};\nInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default InputGroup;","map":{"version":3,"sources":["C:\\Users\\Bera\\workspace\\lang-talk\\client\\src\\components\\common\\InputGroup.js"],"names":["React","classnames","PropTypes","InputGroup","name","placeholder","value","error","onChange","icon","info","notvalid","propTypes","string","isRequired","type","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAQb;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,IACI,QADJA,IACI;AACJ,SACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCD,IAAtC,CADF,EAEE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,SAAS,EAAEP,UAAU,CAAC,UAAD,EAAa;AAChCU,MAAAA,QAAQ,EAAEJ;AADsB,KAAb,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,WAA9B,CAVF,EAWGE,KAAK,IAAI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAA/B,CAXZ,CADF;AAeD,CAxBD;;AA0BAJ,UAAU,CAACS,SAAX,GAAuB;AACrBR,EAAAA,IAAI,EAAEF,SAAS,CAACW,MAAV,CAAiBC,UADF;AAErBT,EAAAA,WAAW,EAAEH,SAAS,CAACW,MAFF;AAGrBP,EAAAA,KAAK,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAHH;AAIrBJ,EAAAA,IAAI,EAAER,SAAS,CAACW,MAJK;AAKrBN,EAAAA,KAAK,EAAEL,SAAS,CAACW,MALI;AAMrBE,EAAAA,IAAI,EAAEb,SAAS,CAACW,MAAV,CAAiBC,UANF;AAOrBN,EAAAA,QAAQ,EAAEN,SAAS,CAACc,IAAV,CAAeF,UAPJ;AAQrBL,EAAAA,IAAI,EAAEP,SAAS,CAACW;AARK,CAAvB;AAWAV,UAAU,CAACc,YAAX,GAA0B;AACxBF,EAAAA,IAAI,EAAE;AADkB,CAA1B;AAIA,eAAeZ,UAAf","sourcesContent":["import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  onChange,\r\n  icon,\r\n  info\r\n}) => {\r\n  return (\r\n    <div className=\"input-field col s6\">\r\n      <i className=\"material-icons prefix\">{icon}</i>\r\n      <input\r\n        id=\"icon_prefix\"\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        className={classnames(\"validate\", {\r\n          notvalid: error\r\n        })}\r\n      />\r\n      <label htmlFor=\"icon_prefix\">{placeholder}</label>\r\n      {error && <span className=\"helper-text\">{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  icon: PropTypes.string\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default InputGroup;\r\n"]},"metadata":{},"sourceType":"module"}
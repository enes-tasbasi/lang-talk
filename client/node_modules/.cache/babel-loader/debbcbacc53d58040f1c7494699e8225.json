{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bera\\\\workspace\\\\lang-talk\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../common/Spinner\";\nimport { getCurrentProfile } from \"../../actions/profileActions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var user = this.props.auth.user;\n      var dashboardContent;\n\n      if (profile == null || loading) {\n        dashboardContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      } else {\n        // Check if the user has profile data\n        if (Object.keys(profile).length > 0) {\n          dashboardContent = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, \"Welcome \", React.createElement(Link, {\n            to: \"/profile/\".concat(profile.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }), user.name));\n        } else {\n          // User is logged but has no profile\n          dashboardContent = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-panel lighten-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"You don't have a profile set up yet\"), React.createElement(Link, {\n            to: \"/create-profile\",\n            className: \"waves-effect waves-light btn-large\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"Set Up Profile\"));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, dashboardContent);\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:\\Users\\Bera\\workspace\\lang-talk\\client\\src\\components\\dashboard\\Dashboard.js"],"names":["React","Component","connect","Link","PropTypes","Spinner","getCurrentProfile","Dashboard","props","profile","loading","user","auth","dashboardContent","Object","keys","length","id","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,iBAAX;AACD;;;6BAEQ;AAAA,gCACsB,KAAKE,KAAL,CAAWC,OADjC;AAAA,UACCA,OADD,uBACCA,OADD;AAAA,UACUC,OADV,uBACUA,OADV;AAAA,UAECC,IAFD,GAEU,KAAKH,KAAL,CAAWI,IAFrB,CAECD,IAFD;AAIP,UAAIE,gBAAJ;;AAEA,UAAIJ,OAAO,IAAI,IAAX,IAAmBC,OAAvB,EAAgC;AAC9BG,QAAAA,gBAAgB,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;AACD,OAFD,MAEO;AACL;AACA,YAAIC,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,MAArB,GAA8B,CAAlC,EAAqC;AACnCH,UAAAA,gBAAgB,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACU,oBAAC,IAAD;AAAM,YAAA,EAAE,qBAAcJ,OAAO,CAACQ,EAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADV,EAEGN,IAAI,CAACO,IAFR,CADF,CADF;AAQD,SATD,MASO;AACL;AACAL,UAAAA,gBAAgB,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,EAIE,oBAAC,IAAD;AACE,YAAA,EAAE,EAAC,iBADL;AAEE,YAAA,SAAS,EAAC,oCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CADF;AAaD;AACF;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,gBADH,CADF;AAmDD;;;;EA7FqBZ,S;;AAgGxBM,SAAS,CAACY,SAAV,GAAsB;AACpBb,EAAAA,iBAAiB,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADd;AAEpBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBD,UAFH;AAGpBZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCZ,IAAAA,IAAI,EAAEY,KAAK,CAACZ,IADoB;AAEhCH,IAAAA,OAAO,EAAEe,KAAK,CAACf;AAFiB,GAAL;AAAA,CAA7B;;AAKA,eAAeP,OAAO,CACpBqB,eADoB,EAEpB;AAAEjB,EAAAA,iBAAiB,EAAjBA;AAAF,CAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../common/Spinner\";\n\nimport { getCurrentProfile } from \"../../actions/profileActions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  render() {\n    const { profile, loading } = this.props.profile;\n    const { user } = this.props.auth;\n\n    let dashboardContent;\n\n    if (profile == null || loading) {\n      dashboardContent = <Spinner />;\n    } else {\n      // Check if the user has profile data\n      if (Object.keys(profile).length > 0) {\n        dashboardContent = (\n          <div>\n            <h5>\n              Welcome <Link to={`/profile/${profile.id}`} />\n              {user.name}\n            </h5>\n          </div>\n        );\n      } else {\n        // User is logged but has no profile\n        dashboardContent = (\n          <div>\n            <div className=\"card-panel lighten-2\">\n              You don't have a profile set up yet\n            </div>\n            <Link\n              to=\"/create-profile\"\n              className=\"waves-effect waves-light btn-large\"\n            >\n              Set Up Profile\n            </Link>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"container dashboard\">\n        {dashboardContent}\n        {/* <div className=\"fixed-action-btn\">\n          <a\n            href=\"#\"\n            className=\"hoverable waves-effect btn-floating btn-large red\"\n          >\n            <i className=\"large material-icons\">mode_edit</i>\n          </a>\n        </div>\n        <h3>Dashboard</h3>\n        <img src=\"imgs/profile.png\" alt=\"\" className=\"profile-img\" />\n        <h4>Enes</h4>\n        <div className=\"cards\">\n          <div className=\"card small\">\n            <div className=\"card-content\">\n              <h5>Languages Spoken</h5>\n              <ul>\n                <li>Turkish</li>\n                <li>English</li>\n                <li>Arabic</li>\n                <li>Russian</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"card small\">\n            <div className=\"card-content\">\n              <h5>Interested in Languages</h5>\n              <ul>\n                <li>French</li>\n                <li>Japanese</li>\n                <li>Korean</li>\n                <li>Spanish</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"card small\">\n            <div className=\"card-content\">\n              <h5>Hobbies</h5>\n              <ul>\n                <li>Coding</li>\n                <li>Working out</li>\n                <li>Reading</li>\n                <li>Watching movies </li>\n              </ul>\n            </div>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCurrentProfile }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}